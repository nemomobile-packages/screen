diff -uNr screen-4.0.3/fileio.c screen-4.0.3-fixed/fileio.c
--- screen-4.0.3/fileio.c	2003-09-08 22:25:28.000000000 +0800
+++ screen-4.0.3-fixed/fileio.c	2009-04-25 00:42:53.000000000 +0800
@@ -365,11 +365,13 @@
   char *mode = "w";
 #ifdef COPY_PASTE
   int public = 0;
+/*
 # ifdef _MODE_T
   mode_t old_umask;
 # else
   int old_umask;
 # endif
+*/
 # ifdef HAVE_LSTAT
   struct stat stb, stb2;
   int fd, exists = 0;
@@ -412,8 +414,30 @@
 	  fnbuf[sizeof(fnbuf) - 1] = 0;
 	  fn = fnbuf;
 	}
+/**
+ * I consider this 'public exchange file' feature a bad idea, at least
+ * if this is the default case. I really don't like the idea of an admin
+ * copying configuration file snippets around that might get changed
+ * in that buffer file.
+ * Drop the notion of a 'public' exchange file. If someone explictly wants
+ * to share his copy buffer contents, he is free to chmod it after its
+ * creation.
+ * Jan Nordholz <hesso@pool.math.tu-berlin.de>, 2007/08/07
+ *
+ * Race condition fix.  It may be necessary to adjust the modifications for
+ * systems that do not satisfy the HAVE_LSTAT condition.
+ * Jan Minar <rdancer@rdancer.org> 2009-01-11
+ */
       public = !strcmp(fn, DEFAULT_BUFFERFILE);
 # ifdef HAVE_LSTAT
+      /*
+       * Note: In the time between lstat() and open()/remove() below are
+       * called, the file can be created/removed/modified.  Therefore the
+       * information lstat() returns is taken into consideration, but not
+       * relied upon.  In particular, the open()/remove() calls can fail, and
+       * the code must account for that.  Symlink attack could be mounted if
+       * the code is changed carelessly.  --rdancer 2009-01-11
+       */
       exists = !lstat(fn, &stb);
       if (public && exists && (S_ISLNK(stb.st_mode) || stb.st_nlink > 1))
 	{
@@ -432,28 +456,36 @@
 #ifdef COPY_PASTE
       if (dump == DUMP_EXCHANGE && public)
 	{
+	  /*
+	   * Setting umask to zero is a bad idea -- the user surely doesn't
+	   * expect a publicly readable file in a publicly readable directory 
+	   * --rdancer 2009-01-11
+	   */
+	  /*
           old_umask = umask(0);
+	   */
 # ifdef HAVE_LSTAT
 	  if (exists)
-	    {
-	      if ((fd = open(fn, O_WRONLY, 0666)) >= 0)
-		{
-		  if (fstat(fd, &stb2) == 0 && stb.st_dev == stb2.st_dev && stb.st_ino == stb2.st_ino)
-		    ftruncate(fd, 0);
-		  else
-		    {
-		      close(fd);
-		      fd = -1;
-		    }
-		}
-	    }
-	  else
-	    fd = open(fn, O_WRONLY|O_CREAT|O_EXCL, 0666);
-	  f = fd >= 0 ? fdopen(fd, mode) : 0;
+	      if (remove(fn) == -1)
+	        {
+		  /* Error */
+		  debug2("WriteFile: File exists and remove(%s) failed: %s\n",
+			  fn, strerror(errno));
+		  UserReturn(0);
+	        }
 # else
-          f = fopen(fn, mode);
+	  (void) remove(fn);
 # endif
+	  /*
+	   * No r/w permissions for anybody but the user, as the file may be in
+	   * a public directory -- if the user chooses, they can chmod the file
+	   * afterwards. --rdancer 2008-01-11
+	   */
+	  fd = open(fn, O_WRONLY|O_CREAT|O_EXCL, 0600);
+	  f = fd >= 0 ? fdopen(fd, mode) : 0;
+	  /*
           umask(old_umask);
+	   */
 	}
       else
 #endif /* COPY_PASTE */
